#include <robohand32servo.h>
#include <ESP32Servo.h>
#include "esp32-hal-ledc.h"
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <ESP32RotaryEncoder.h>
#define I2C_ADDR 0x27 
#define LCD_COLUMNS 16
#define LCD_LINES 2
bool encoder_flag=false;
RotaryEncoder rotaryEncoder(18, 19);
LiquidCrystal_I2C lcd(I2C_ADDR, LCD_COLUMNS, LCD_LINES);
Robohand32Servo robohand(26, 25, 33, 32, 27, 14);

String inp, finger = "", L1 = "", L2 = "";
int value = 0;

void setup() {
  // put your setup code here, to run once:
  pinMode(17, OUTPUT);
  pinMode(4, INPUT);
  pinMode(2, OUTPUT);
  pinMode(13, INPUT);
  Serial.begin(115200);
  // Serial.println("Robotic arm initialised.");
  Serial.println("Connected.");
  robohand.begin();
  robohand.setAllServosPercent(0, 0, 0, 0, 0, 0);
  rotaryEncoder.setEncoderType(EncoderType::HAS_PULLUP);
  rotaryEncoder.onTurned(&knobCallback);
  rotaryEncoder.setBoundaries(-255, 255, false);
  rotaryEncoder.begin();
}


void knobCallback(long value) {
  if(encoder_flag==true) {
    Serial.printf("Encoder:%ld", value);
    Serial.println(", ;");
  }

}


void loop() {
  // put your main code here, to run repeatedly:
  if (Serial.available()) {
    inp = Serial.readStringUntil(';');
    inp.trim();
    Serial.println(inp);
  }
  if (inp == "A") {
    finger_control();
    Serial.println("exited");
  } else if (inp == "B") {
    sensor_testing();
    Serial.println("exited");
  } else if (inp == "C") {
    vibration_motor();
    Serial.println("exited");
  } else if (inp == "D") {
    display_control();
    Serial.println("exited");
  } else if (inp == "E") {
    encoder_control();
    Serial.println("exited");
  } else if (inp == "F") {
    buzzer_control();
    Serial.println("exited");
  } else if (inp == "G") {
    gestures();
    Serial.println("exited");
  }
}


void finger_control() {
  while (true) {
    if (Serial.available()) {
      inp = Serial.readStringUntil(';');
      inp.trim();
      Serial.println(inp);
    }
    if (inp == "OFF") {
      break;
    } else if (inp == "reset") {
      robohand.setAllServosPercent(0, 0, 0, 0, 0, 0);
    }
    int ci = inp.indexOf(',');
    if (ci != -1) {
      finger = inp.substring(0, ci);
      Serial.println(finger);
      value = inp.substring(ci + 1).toInt();
      Serial.println(value);
      robohand.setServoPercent(finger, value);
      inp = "";
    }
  }
}


void sensor_testing() {
  Serial.println("Enter the type of sensor : touch(T), flex(F), EMG ending with ';' .");
  while (true) {
    if (Serial.available()) {
      inp = Serial.readStringUntil(';');
      inp.trim();
      Serial.println(inp);
    }
    if (inp == "T") {
      while (true) {
        int val = digitalRead(13);
        if (val == HIGH) {
          Serial.println("touch:detected");
        } else {
          Serial.println("touch:not detected");
        }
        if (Serial.available()) {
          inp = Serial.readStringUntil(';');
          inp.trim();
          Serial.println(inp);
        }
        if (inp == "OFF") break;
      }
    } else if (inp == "F") {
      while (true) {
        int val = analogRead(4);
        Serial.print("flex:");
        Serial.println(val);
        if (Serial.available()) {
          inp = Serial.readStringUntil(';');
          inp.trim();
          Serial.println(inp);
        }
        if (inp == "OFF") break;
      }
    } else if (inp == "EMG") {
      while (true) {
        int val = analogRead(4);
        Serial.print("EMG:");
        Serial.println(val);
        if (Serial.available()) {
          inp = Serial.readStringUntil(';');
          inp.trim();
          Serial.println(inp);
        }
        if (inp == "OFF") break;
      }
    } else if (inp == "OFF") {
      break;
    }
  }
}


void vibration_motor() {
  while (true) {
    if (Serial.available()) {
      inp = Serial.readStringUntil(';');
      inp.trim();
      Serial.println(inp);
    }
    if (inp == "enable") {
      digitalWrite(2, HIGH);
    } else if (inp == "disable") {
      digitalWrite(2, LOW);
    } else if (inp == "OFF") {
      break;
    }
  }
}


void display_control() {
  lcd.init();
  lcd.backlight();
  while (true) {
    if (Serial.available()) {
      inp = Serial.readStringUntil(';');
      inp.trim();
      Serial.println(inp);
      lcd.clear();
    }
    if (inp == "OFF") {
      lcd.clear();
      break;
    }
    int ci = inp.indexOf(',');
    if (ci != -1) {
      L1 = inp.substring(0, ci);
      Serial.println(L1);
      L2 = inp.substring(ci + 1);
      Serial.println(L2);
    }
    lcd.setCursor(0, 0);
    lcd.print(L1);
    lcd.setCursor(0, 1);
    lcd.print(L2);
  }
}




void encoder_control() {
  while (true) {
    encoder_flag=true;
    if (Serial.available()) {
      inp = Serial.readStringUntil(';');
      inp.trim();
      Serial.println(inp);
      if (inp == "OFF") {
        break;
      }
      if (inp == "reset") {
        rotaryEncoder.resetEncoderValue();
        Serial.print("Encoder:");
        Serial.print(rotaryEncoder.getEncoderValue());
        Serial.println(", ;");
      }
    }
  }
  encoder_flag=false;
}


void buzzer_control() {
  while (true) {
    if (Serial.available()) {
      inp = Serial.readStringUntil(';');
      inp.trim();
      Serial.println(inp);
    }
    if (inp == "TB") {
      digitalWrite(17, HIGH);
    }
    if (inp == "stop_buzzer") {
      digitalWrite(17, LOW);
    }
    if (inp == "OFF") break;
  }
  digitalWrite(17, LOW);
}


void gestures() {
  while (true) {
    if (Serial.available()) {
      inp = Serial.readStringUntil(';');
      inp.trim();
      Serial.println(inp);
    }
    if (inp == "one") {
      robohand.setAllServosPercent(0, 90, 90, 90, 90, 50);
      inp = "";
    } else if (inp == "two" || inp == "peace" || inp == "scissor") {
      robohand.setAllServosPercent(0, 0, 90, 90, 90, 50);
      inp = "";
    } else if (inp == "three") {
      robohand.setAllServosPercent(0, 0, 0, 90, 90, 50);
      inp = "";
    } else if (inp == "four") {
      robohand.setAllServosPercent(0, 0, 0, 0, 90, 50);
      inp = "";
    } else if (inp == "five" || inp == "reset" || inp == "paper") {
      robohand.setAllServosPercent(0, 0, 0, 0, 0, 0);
      inp = "";
    } else if (inp == "wave") {

      while (true) {
        robohand.setAllServosPercent(0, 0, 0, 0, 0, 0);
        delay(250);
        robohand.setAllServosPercent(0, 0, 0, 20, 0, 0);
        delay(250);
        robohand.setAllServosPercent(0, 0, 20, 40, 0, 0);
        delay(250);
        robohand.setAllServosPercent(0, 20, 40, 60, 0, 0);
        delay(250);
        robohand.setAllServosPercent(20, 40, 60, 80, 0, 0);
        delay(250);
        robohand.setAllServosPercent(40, 60, 80, 100, 20, 0);
        delay(250);
        robohand.setAllServosPercent(60, 80, 100, 100, 40, 0);
        delay(250);
        robohand.setAllServosPercent(80, 100, 100, 100, 60, 0);
        delay(250);
        robohand.setAllServosPercent(100, 100, 100, 100, 80, 0);
        delay(250);
        robohand.setAllServosPercent(100, 100, 100, 100, 100, 0);
        delay(250);
        robohand.setAllServosPercent(100, 100, 100, 80, 100, 0);
        delay(250);
        robohand.setAllServosPercent(100, 100, 80, 60, 100, 0);
        delay(250);
        robohand.setAllServosPercent(100, 80, 60, 40, 100, 0);
        delay(250);
        robohand.setAllServosPercent(80, 60, 40, 20, 100, 0);
        delay(250);
        robohand.setAllServosPercent(60, 40, 20, 0, 80, 0);
        delay(250);
        robohand.setAllServosPercent(40, 20, 0, 0, 60, 0);
        delay(250);
        robohand.setAllServosPercent(20, 0, 0, 0, 40, 0);
        delay(250);
        robohand.setAllServosPercent(0, 0, 0, 0, 20, 0);
        delay(250);
        robohand.setAllServosPercent(0, 0, 0, 0, 0, 0);
        delay(250);
        if (Serial.available()) {
          inp = Serial.readStringUntil(';');
          inp.trim();
          Serial.println(inp);
        }
        if (inp == "stop") {
          inp = "";
          break;
        }
      }
    } else if (inp == "yo") {
      robohand.setAllServosPercent(0, 90, 90, 0, 0, 0);
      inp = "";
    } else if (inp == "rock") {
      robohand.setAllServosPercent(100, 100, 100, 100, 80, 100);
      inp = "";
    } else if (inp == "nice") {
      robohand.setAllServosPercent(80, 0, 0, 0, 80, 45);
      inp = "";
    } else if (inp == "OFF") {
      break;
    }
  }
}
